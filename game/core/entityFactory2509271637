// game/core/entityFactory.js

import { Position } from '../components/Position.js';
import { Renderable } from '../components/Renderable.js';
import { Velocity } from '../components/Velocity.js';
import { Controllable } from '../components/Controllable.js';
import { Rotation } from '../components/Rotation.js';
import { Team } from '../components/Team.js'; // ← ★Teamをインポート

/**
 * プレイヤーエンティティを作成して返す
 * @param {import('./World').World} world
 * @returns {number} 作成されたプレイヤーエンティティのID
 */
export function createPlayer(world) {
  const canvas = world.canvas;
  if (!canvas) {
    throw new Error('Worldにcanvasが設定されていません。');
  }

  const player = world.createEntity();
  world.addComponent(player, new Position(canvas.width / 2, canvas.height - 100));
  world.addComponent(player, new Renderable('white', 20, 30, 'triangle'));
  world.addComponent(player, new Velocity(0, 0));
  world.addComponent(player, new Controllable());
  world.addComponent(player, new Rotation(0));
  world.addComponent(player, new Team('player')); // ← ★プレイヤーを'player'チームに所属させる

  console.log(`プレイヤーを作成しました (ID: ${player})`);
  return player;
}

// --- 弾丸生成関数（ステップ2で追加済み） ---
import { Bullet } from '../components/Bullet.js';

export function createBullet(world, ownerPosition, ownerRotation, ownerTeam) {
  const bullet = world.createEntity();
  const speed = 10.0;
  const vx = Math.sin(ownerRotation.angle) * speed;
  const vy = -Math.cos(ownerRotation.angle) * speed;

  world.addComponent(bullet, new Position(ownerPosition.x, ownerPosition.y));
  world.addComponent(bullet, new Velocity(vx, vy));
  world.addComponent(bullet, new Renderable('yellow', 5, 10, 'rectangle'));
  world.addComponent(bullet, new Bullet());
  world.addComponent(bullet, new Team(ownerTeam));

  return bullet;
}
